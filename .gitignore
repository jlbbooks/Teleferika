# Dynamic loader file (gets overwritten by build script)
lib/licensing/licensed_features_loader.dart
/licensed_features_package/
# Backup files
*.backup
pubspec.yaml.backup
pubspec.yaml

# General
*.DS_Store
*.orig
*.swp
*~
*.bak

# IntelliJ / Android Studio specific
#.idea/
*.iml
*.ipr
*.iws
modules.xml
#workspace.xml # Obsolete, use .idea/workspace.xml instead
tasks.xml # User-specific tasks
shelf/ # Android Studio's "shelf" feature for stashing changes locally
#libraries/ # Older IntelliJ/AS configuration, usually covered by .idea/
.settings/ # Eclipse specific, sometimes seen if projects are imported

# Build-related
build/
.gradle/ # Gradle wrapper files and local cache
captures/ # Flutter screenshot captures

# Flutter/Dart specific
.dart_tool/
.packages # Old package configuration file, replaced by .dart_tool/package_config.json
.flutter-plugins
.flutter-plugins-dependencies
#pubspec.lock # Some teams commit this, others generate it. Standard practice is to COMMIT it.
#              However, if a team explicitly decides not to, it might be here.
#              FOR MOST FLUTTER PROJECTS, DO NOT ADD pubspec.lock TO .gitignore

# Pub related (global cache is usually outside project, but good to be safe)
# .pub-cache/ # Usually not needed if using global pub cache, but won't hurt.

# FVM (Flutter Version Management) specific
#.fvm/flutter_sdk/ # Exclude the symlinked SDK itself
# Note: You SHOULD commit .fvm/fvm_config.json or .fvm_version (whichever your FVM setup uses)
# So, a more specific rule for FVM might be:
.fvm/*
!.fvm/fvm_config.json
# or just ensure you don't commit the flutter_sdk symlink if .fvm/ itself is not ignored.
# Safest is often to ignore the whole .fvm directory and explicitly add the config file if necessary,
# but the standard `.fvm/` entry is common if you manually manage the config file commit.
# A common FVM setup recommends adding `.fvm/flutter_sdk` specifically if you commit the rest of `.fvm`.
# If you ignore the whole `.fvm/` directory, you don't need the specific `flutter_sdk` line.

# Local settings & Environment specific (examples)
*.local
local.properties # Android specific local properties (e.g., SDK path)
secrets.json # If you store secrets locally and not in version control

# Test related (some generated files)
coverage/ # Dart test coverage reports

# Windows specific thumbnails cache
Thumbs.db
ehthumbs.db
ehthumbs_vista.db

# macOS specific
.Spotlight-V100
.Trashes

# VS Code specific (if also used)
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace


keys/
