<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <!-- The INTERNET permission is required for development. Specifically,
        flutter needs it to communicate with the running application
        to allow setting breakpoints, to provide hot reload, etc.
    -->
    !-- Permissions for file saving and sharing -->
    <!-- Required for Android 9 (API 28) and below for writing to shared storage. -->
    <!-- For Android 10+, its behavior changes with Scoped Storage, but plugins might still need it. -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="32" />
    <!--
        Generally needed alongside WRITE_EXTERNAL_STORAGE for older Android versions.
        For Android 13+, this permission is no longer requested directly for typical apps
        that don't need broad access to all shared files.
        However, file_picker or share_plus might still benefit from its declaration
        for compatibility or certain edge cases on older APIs.
        If you target API 33+, Android Studio might warn you about this permission.
    You can add 'android:maxSdkVersion="32"' if you only need it for older versions.
    -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="32" />
    <!--
        If you are ONLY saving to app-specific directories or using Storage Access Framework
        (which file_picker's saveFile typically does), WRITE_EXTERNAL_STORAGE might not be
        strictly necessary on Android 10+. However, it's often included for plugin compatibility
        and for older OS versions.

        For Android 11 (API 30) and above, if you need to access *all files* (rarely needed,
        and requires special Google Play approval), you would declare:
        <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE" />
        THIS IS LIKELY NOT NEEDED for your use case and makes Play Store submission harder.
    -->
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES"/>
    <uses-permission android:name="android.permission.READ_MEDIA_VIDEO"/>
    <uses-permission android:name="android.permission.READ_MEDIA_AUDIO"/>


    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.BODY_SENSORS" />

    <application
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher"
        android:label="teleferika">
        <activity
            android:name=".MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:exported="true"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
    <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT" />
            <data android:mimeType="text/plain" />
        </intent>
    </queries>
</manifest>
